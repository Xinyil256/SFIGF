Net(
  (head): Head(
    (depth_head): Sequential(
      (0): ConvBNReLU2D(
        (layers): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): ConvBNReLU2D(
        (layers): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
        (act): PReLU(num_parameters=1)
      )
    )
    (guide_head): Sequential(
      (0): ConvBNReLU2D(
        (layers): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): ConvBNReLU2D(
        (layers): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
        (act): PReLU(num_parameters=1)
      )
    )
  )
  (depth_pyramid): ModuleList(
    (0): DownSample(
      (layers): Sequential(
        (0): ConvBNReLU2D(
          (layers): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (act): PReLU(num_parameters=1)
        )
        (1): invPixelShuffle()
        (2): ConvBNReLU2D(
          (layers): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1))
          (act): PReLU(num_parameters=1)
        )
      )
    )
    (1): DownSample(
      (layers): Sequential(
        (0): ConvBNReLU2D(
          (layers): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (act): PReLU(num_parameters=1)
        )
        (1): invPixelShuffle()
        (2): ConvBNReLU2D(
          (layers): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1))
          (act): PReLU(num_parameters=1)
        )
      )
    )
  )
  (guide_pyramid): ModuleList(
    (0): DownSample(
      (layers): Sequential(
        (0): ConvBNReLU2D(
          (layers): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (act): PReLU(num_parameters=1)
        )
        (1): invPixelShuffle()
        (2): ConvBNReLU2D(
          (layers): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1))
          (act): PReLU(num_parameters=1)
        )
      )
    )
    (1): DownSample(
      (layers): Sequential(
        (0): ConvBNReLU2D(
          (layers): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (act): PReLU(num_parameters=1)
        )
        (1): invPixelShuffle()
        (2): ConvBNReLU2D(
          (layers): Conv2d(128, 32, kernel_size=(1, 1), stride=(1, 1))
          (act): PReLU(num_parameters=1)
        )
      )
    )
  )
  (up_sample): ModuleList(
    (0): FuseBlock(
      (depth_kernel): Sequential(
        (0): ConvBNReLU2D(
          (layers): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
          (act): PReLU(num_parameters=1)
        )
        (1): ConvBNReLU2D(
          (layers): Conv2d(32, 9, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (guide_kernel): Sequential(
        (0): ConvBNReLU2D(
          (layers): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
          (act): PReLU(num_parameters=1)
        )
        (1): ConvBNReLU2D(
          (layers): Conv2d(32, 9, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (pix_shf): PixelShuffle(upscale_factor=2)
      (weight_net): Sequential(
        (0): ConvBNReLU2D(
          (layers): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (norm): AdaptiveNorm(
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
          )
          (act): PReLU(num_parameters=1)
        )
        (1): TUnet(
          (up_sample): PixelShuffle(upscale_factor=2)
          (down_sample): invPixelShuffle()
          (encoder_1): ConvBNReLU2D(
            (layers): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm): AdaptiveNorm(
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
            )
            (act): PReLU(num_parameters=1)
          )
          (encoder_2): ConvBNReLU2D(
            (layers): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm): AdaptiveNorm(
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
            )
            (act): PReLU(num_parameters=1)
          )
          (feature_transform): Sequential(
            (0): ConvBNReLU2D(
              (layers): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (norm): AdaptiveNorm(
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
              )
              (act): PReLU(num_parameters=1)
            )
            (1): ConvBNReLU2D(
              (layers): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (norm): AdaptiveNorm(
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
              )
              (act): PReLU(num_parameters=1)
            )
          )
          (decoder_1): ConvBNReLU2D(
            (layers): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm): AdaptiveNorm(
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
            )
            (act): PReLU(num_parameters=1)
          )
          (decoder_2): ConvBNReLU2D(
            (layers): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm): AdaptiveNorm(
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
            )
            (act): PReLU(num_parameters=1)
          )
        )
        (2): ConvBNReLU2D(
          (layers): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (norm): AdaptiveNorm(
            (bn): BatchNorm2d(1, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
          )
          (act): PReLU(num_parameters=1)
        )
      )
      (unfold): Unfold(kernel_size=3, dilation=2, padding=2, stride=1)
      (inputs_conv): Sequential(
        (0): ResNet(
          (layers): Sequential(
            (0): ConvBNReLU2D(
              (layers): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (act): PReLU(num_parameters=1)
            )
            (1): ConvBNReLU2D(
              (layers): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
          )
          (act): PReLU(num_parameters=1)
        )
        (1): ResNet(
          (layers): Sequential(
            (0): ConvBNReLU2D(
              (layers): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (act): PReLU(num_parameters=1)
            )
            (1): ConvBNReLU2D(
              (layers): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
          )
          (act): PReLU(num_parameters=1)
        )
      )
    )
    (1): FuseBlock(
      (depth_kernel): Sequential(
        (0): ConvBNReLU2D(
          (layers): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
          (act): PReLU(num_parameters=1)
        )
        (1): ConvBNReLU2D(
          (layers): Conv2d(32, 9, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (guide_kernel): Sequential(
        (0): ConvBNReLU2D(
          (layers): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
          (act): PReLU(num_parameters=1)
        )
        (1): ConvBNReLU2D(
          (layers): Conv2d(32, 9, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (pix_shf): PixelShuffle(upscale_factor=2)
      (weight_net): Sequential(
        (0): ConvBNReLU2D(
          (layers): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (norm): AdaptiveNorm(
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
          )
          (act): PReLU(num_parameters=1)
        )
        (1): TUnet(
          (up_sample): PixelShuffle(upscale_factor=2)
          (down_sample): invPixelShuffle()
          (encoder_1): ConvBNReLU2D(
            (layers): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm): AdaptiveNorm(
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
            )
            (act): PReLU(num_parameters=1)
          )
          (encoder_2): ConvBNReLU2D(
            (layers): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm): AdaptiveNorm(
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
            )
            (act): PReLU(num_parameters=1)
          )
          (feature_transform): Sequential(
            (0): ConvBNReLU2D(
              (layers): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (norm): AdaptiveNorm(
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
              )
              (act): PReLU(num_parameters=1)
            )
            (1): ConvBNReLU2D(
              (layers): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (norm): AdaptiveNorm(
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
              )
              (act): PReLU(num_parameters=1)
            )
          )
          (decoder_1): ConvBNReLU2D(
            (layers): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm): AdaptiveNorm(
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
            )
            (act): PReLU(num_parameters=1)
          )
          (decoder_2): ConvBNReLU2D(
            (layers): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm): AdaptiveNorm(
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
            )
            (act): PReLU(num_parameters=1)
          )
        )
        (2): ConvBNReLU2D(
          (layers): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (norm): AdaptiveNorm(
            (bn): BatchNorm2d(1, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
          )
          (act): PReLU(num_parameters=1)
        )
      )
      (unfold): Unfold(kernel_size=3, dilation=2, padding=2, stride=1)
      (inputs_conv): Sequential(
        (0): ResNet(
          (layers): Sequential(
            (0): ConvBNReLU2D(
              (layers): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (act): PReLU(num_parameters=1)
            )
            (1): ConvBNReLU2D(
              (layers): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
          )
          (act): PReLU(num_parameters=1)
        )
        (1): ResNet(
          (layers): Sequential(
            (0): ConvBNReLU2D(
              (layers): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (act): PReLU(num_parameters=1)
            )
            (1): ConvBNReLU2D(
              (layers): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
          )
          (act): PReLU(num_parameters=1)
        )
      )
    )
    (2): FuseBlock(
      (depth_kernel): Sequential(
        (0): ConvBNReLU2D(
          (layers): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
          (act): PReLU(num_parameters=1)
        )
        (1): ConvBNReLU2D(
          (layers): Conv2d(32, 9, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (guide_kernel): Sequential(
        (0): ConvBNReLU2D(
          (layers): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1))
          (act): PReLU(num_parameters=1)
        )
        (1): ConvBNReLU2D(
          (layers): Conv2d(32, 9, kernel_size=(1, 1), stride=(1, 1))
        )
      )
      (pix_shf): PixelShuffle(upscale_factor=2)
      (weight_net): Sequential(
        (0): ConvBNReLU2D(
          (layers): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (norm): AdaptiveNorm(
            (bn): BatchNorm2d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
          )
          (act): PReLU(num_parameters=1)
        )
        (1): TUnet(
          (up_sample): PixelShuffle(upscale_factor=2)
          (down_sample): invPixelShuffle()
          (encoder_1): ConvBNReLU2D(
            (layers): Conv2d(32, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm): AdaptiveNorm(
              (bn): BatchNorm2d(16, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
            )
            (act): PReLU(num_parameters=1)
          )
          (encoder_2): ConvBNReLU2D(
            (layers): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm): AdaptiveNorm(
              (bn): BatchNorm2d(32, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
            )
            (act): PReLU(num_parameters=1)
          )
          (feature_transform): Sequential(
            (0): ConvBNReLU2D(
              (layers): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (norm): AdaptiveNorm(
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
              )
              (act): PReLU(num_parameters=1)
            )
            (1): ConvBNReLU2D(
              (layers): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (norm): AdaptiveNorm(
                (bn): BatchNorm2d(128, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
              )
              (act): PReLU(num_parameters=1)
            )
          )
          (decoder_1): ConvBNReLU2D(
            (layers): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm): AdaptiveNorm(
              (bn): BatchNorm2d(256, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
            )
            (act): PReLU(num_parameters=1)
          )
          (decoder_2): ConvBNReLU2D(
            (layers): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm): AdaptiveNorm(
              (bn): BatchNorm2d(128, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
            )
            (act): PReLU(num_parameters=1)
          )
        )
        (2): ConvBNReLU2D(
          (layers): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (norm): AdaptiveNorm(
            (bn): BatchNorm2d(1, eps=0.001, momentum=0.999, affine=True, track_running_stats=True)
          )
          (act): PReLU(num_parameters=1)
        )
      )
      (unfold): Unfold(kernel_size=3, dilation=2, padding=2, stride=1)
      (inputs_conv): Sequential(
        (0): ResNet(
          (layers): Sequential(
            (0): ConvBNReLU2D(
              (layers): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (act): PReLU(num_parameters=1)
            )
            (1): ConvBNReLU2D(
              (layers): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
          )
          (act): PReLU(num_parameters=1)
        )
        (1): ResNet(
          (layers): Sequential(
            (0): ConvBNReLU2D(
              (layers): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (act): PReLU(num_parameters=1)
            )
            (1): ConvBNReLU2D(
              (layers): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
          )
          (act): PReLU(num_parameters=1)
        )
      )
    )
  )
  (init_conv): ModuleList(
    (0): InitLayer(
      (layer1): Sequential(
        (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): PReLU(num_parameters=1)
      )
      (layer2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (layers): Sequential(
        (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): PReLU(num_parameters=1)
        (2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (1): InitLayer(
      (layer1): Sequential(
        (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): PReLU(num_parameters=1)
      )
      (layer2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (layers): Sequential(
        (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): PReLU(num_parameters=1)
        (2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (2): InitLayer(
      (layer1): Sequential(
        (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): PReLU(num_parameters=1)
      )
      (layer2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (layers): Sequential(
        (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): PReLU(num_parameters=1)
        (2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
  )
  (p_layers): ModuleList(
    (0): PyModel(
      (layer1): Sequential(
        (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): PReLU(num_parameters=1)
      )
      (layer2): Sequential(
        (0): Conv2d(32, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): PReLU(num_parameters=1)
      )
      (layer3): Sequential(
        (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): PReLU(num_parameters=1)
      )
      (res_scale): Scale()
    )
    (1): PyModel(
      (layer1): Sequential(
        (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): PReLU(num_parameters=1)
      )
      (layer2): Sequential(
        (0): Conv2d(32, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): PReLU(num_parameters=1)
      )
      (layer3): Sequential(
        (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): PReLU(num_parameters=1)
      )
      (res_scale): Scale()
    )
    (2): PyModel(
      (layer1): Sequential(
        (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): PReLU(num_parameters=1)
      )
      (layer2): Sequential(
        (0): Conv2d(32, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): PReLU(num_parameters=1)
      )
      (layer3): Sequential(
        (0): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): PReLU(num_parameters=1)
      )
      (res_scale): Scale()
    )
  )
  (tail_conv): Sequential(
    (0): ConvBNReLU2D(
      (layers): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (act): PReLU(num_parameters=1)
    )
    (1): ConvBNReLU2D(
      (layers): Conv2d(32, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (act): PReLU(num_parameters=1)
    )
  )
  (res_scale): Scale()
)
